void apply_force( VECTOR *force, VECTOR *rel_position, RT *m, Object *obj );
void apply_force_ws( VECTOR *force, VECTOR *rel_position, Object *obj );
void springer( Object *obj, VECTOR *accel );
void transform_verts( RT *m, Object *obj, SVECTOR **vlist, LONG *howmany );
void apply_impulse( VECTOR *force, VECTOR *rel_position, RT *m, Object *obj );
void inverse_matrix( RT *mat, RT *imat );
void physics_element( Object *obj, RT *pm  );
void matrix_translate( RT *vo, VECTOR *vi );
void vector_matrix( VECTOR *t, RT *m1 );
void svector_matrix( SVECTOR *sv, RT *om );
void svector_X_matrix( SVECTOR *t, RT *m, VECTOR *ot );
void vector_X_matrix( VECTOR *t, RT *m, VECTOR *ot );
void rot_axis_set( SVECTOR *t, RT *m1 );
void rv_axis_set( WORD	x, WORD y, WORD z, RT *m1 );
void identity( RT *m );
void matrix_rotate( RT *m, VECTOR *r );

void rigid_body( Object *obj );
void damp_avel( VECTOR	*v );
void collision( Object *obj );



void vector_shift( VECTOR *v, LONG shift, VECTOR *o );
void vector_deshift( VECTOR *v, LONG shift, VECTOR *o );
LONG vector_dot( VECTOR *a, VECTOR *b );
LONG vector_magnitude( VECTOR *v );
void vector_descale( VECTOR *v, LONG scale, VECTOR *o );
void vector_cross( VECTOR *i, VECTOR *j, VECTOR *k  );
void vector_scale( VECTOR *v, LONG scale, VECTOR *o );
void vector_add( VECTOR *a, VECTOR *b, VECTOR *c );
void vector_subtract( VECTOR *a, VECTOR *b, VECTOR *c );
void vector_multiply( VECTOR *v, VECTOR *v1, VECTOR *o );
void vector_divide( VECTOR *v, VECTOR *v1, VECTOR *o );
void vector_negate( VECTOR *v, VECTOR *vo );
LONG vector_size( VECTOR *v );

void extract_x_component( Rotation *r, VECTOR *v );
void extract_y_component( Rotation *r, VECTOR *v );
void extract_z_component( Rotation *r, VECTOR *v );




Event	*get_free_event( void );
void event( UBYTE *string );
